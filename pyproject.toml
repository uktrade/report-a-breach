# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python. Multiline strings are treated as
# verbose regular expressions by Black. Use [ ] to denote a significant space
# character.

[build-system]
requires = ["setuptools==69.0.1"]
build-backend = "setuptools.build_meta"

[project]
name = "report-a-trade-sanctions-breach-prototype"
version = "0"


[tool.black]
line-length = 100
target-version = ['py312']
exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.venv
  | _build
  | .venv
  | tests-reports
)/
'''

# see https://pycqa.github.io/isort/docs/configuration/black_compatibility.html
[tool.isort]
profile = "black"

#
# Global mypy config
#
[tool.mypy]
python_version = "3.12"
exclude = [
]
show_error_codes = true
check_untyped_defs = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true

#
# Modules to ignore missing imports
#
[[tool.mypy.overrides]]
module = [
]
ignore_missing_imports = true


#
# Modules to have extra typing checks (equivalent to --strict).
# Extend as needed - modules added below as an example.
# https://mypy.readthedocs.io/en/stable/existing_code.html#introduce-stricter-options
#
[[tool.mypy.overrides]]
module = [
]
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_reexport = true
